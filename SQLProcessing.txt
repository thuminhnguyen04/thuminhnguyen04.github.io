[Sort sales = date] Display results
[Sort sales = date] Add SQL queries
[Sort sales = date] Get query result from DBMS 
[Sort sales = date] Establish connection to DBMS

            


































QString servername, dbname;
//instatiating qstring variables as value of lineEdit
//declaring new sql database object
QSqlDatabase *db = new QSqlDatabase( QSqlDatabase::addDatabase("QODBC"));
//setting q string variables to name of server and database
servername  = "********";
dbname = "Employees";
db->setConnectOptions();
//connecting to database, passing q string variables as arguments
QString dsn = QString("DRIVER={SQL Server};SERVER=%1;DATABASE=%2;Trusted_Connection=Yes;").arg(servername).arg(dbname);/** Build the connection string **/
//declaring database name
db->setDatabaseName(dsn);
//opening db
if(db->open())
{
    qDebug() << "**Successfully connected to database**";
    QSqlQuery query;
    query.prepare("
SELECT CONCAT(customer.first_name, " ", customer.last_name), sales.time, items.name
FROM customer
INNER JOIN sales ON customer.ID = sales.cus_id
INNER JOIN items ON sales.item_id = items.id;
 values(:var);");
    query.bindValue(":var", var);
    if(!query.exec())
    {
        qFatal("Failed to add");
    }
    qDebug()<< "Insert Success";
	cout << "TABLE" << endl;
  
    sqlite3_exec(DB, query.c_str(), callback, NULL, NULL);
  
}